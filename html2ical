#!/usr/bin/env python3

import sys
from bs4 import BeautifulSoup

from dateutil.parser import parse
from icalendar import Calendar, Event, vCalAddress, vText
from datetime import datetime, timedelta
import hashlib
import argparse

def hash(*args):
	hash = hashlib.md5()
	for arg in args:
		hash.update(arg.encode('utf-8'))

	return hash.hexdigest()

parser = argparse.ArgumentParser(description='Webba Schedule to ICal Parser.')
parser.add_argument('-o', '--out', type=str, required=True, help='The ical file to output.')
parser.add_argument('-t', '--title', type=str, required=True, help='The title of the calendar e.g. Braves III.')
parser.add_argument('-s', '--season', type=str, required=True, help='The season of the calendar, e.g. 2019/2020.')
parser.add_argument('files', nargs='+', help='The html files to be imported')
args = parser.parse_args()

season = args.season
cal = Calendar()
cal.add('prodid', '-//{} {}//mxm.dk//'.format(args.title, season))
cal.add('version', '2.0')

with open(args.files[0], encoding='utf-8') as html_doc:
	soup = BeautifulSoup(html_doc, 'html.parser')

	rows = soup.select("#page > table.table4.border2 > tbody > tr")

	for i in range(1, len(rows)):
		row = rows[i]

		tds = row.select("td")
		date = tds[0].a.contents[0]
		time = tds[1].contents[0]
		home_team = tds[2].a.contents[0]
		home_score = tds[3].contents[0]
		home_points = tds[4].div.contents[0]
		away_team = tds[5].a.contents[0]
		away_score = tds[6].contents[0]
		away_points = tds[7].div.contents[0]
		location = tds[8].a.contents[0]
		game_type = tds[9].contents[0]
		code = tds[10].contents[0]
		schedule = tds[11].contents[0]

		print("{date} {time} {home_team} {home_score} {home_points} {away_team} {away_score} {away_points} {location} {game_type} {code} {schedule}"
			.format(
				date=date,
				time=time,
				home_team=home_team,
				home_score=home_score,
				home_points=home_points,
				away_team=away_team,
				away_score=away_score,
				away_points=away_points,
				location=location,
				game_type=game_type,
				code=code,
				schedule=schedule
				))

		start_date = parse(date + " " + time)
		end_date = start_date + timedelta(hours=2)

		event = Event()
		event.add('dtstart', start_date)
		event.add('dtend', end_date)
		event.add('dtstamp', datetime.now())
		event.add('location', vText(location))
		event.add('status', 'confirmed')
		event.add('uid', hash(season, code))
		event.add('summary', "{game_type} {home_team} vs {away_team} ({code})".format(
				home_team=home_team,
				away_team=away_team,
				game_type=game_type,
				code=code
				))
		event.add('descriptiopn', "A {game_type} game: {home_team} vs {away_team} ({code}) at {location} for {schedule}".format(
				home_team=home_team,
				away_team=away_team,
				game_type=game_type,
				location=location,
				code=code,
				schedule=schedule
				))
		cal.add_component(event)

with open(sys.argv[2], 'wb') as ical:
	ical.write(cal.to_ical())

