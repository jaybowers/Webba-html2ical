#!/usr/bin/env python3

import sys
from bs4 import BeautifulSoup

from dateutil.parser import parse
from icalendar import Calendar, Event, vCalAddress, vText
from datetime import datetime, timedelta
import hashlib
import argparse

def hash(*args):
	hash = hashlib.md5()
	for arg in args:
		hash.update(arg.encode('utf-8'))

	return hash.hexdigest()

parser = argparse.ArgumentParser(description='Webba Schedule to ICal.')
parser.add_argument('-o', '--out', type=str, required=True, help='The ical file to output.')
parser.add_argument('-t', '--title', type=str, required=True, help='The title of the calendar e.g. Braves III.')
parser.add_argument('-s', '--season', type=str, required=True, help='The season of the calendar, e.g. 2019/2020.')
parser.add_argument('files', nargs='+', help='The html files to be imported')
args = parser.parse_args()

season = args.season
cal = Calendar()
cal.add('prodid', '-//{} {}//mxm.dk//'.format(args.title, season))
cal.add('version', '2.0')

with open(args.files[0], encoding='utf-8') as html_doc:
	soup = BeautifulSoup(html_doc, 'html.parser')

	rows = soup.select("#hide-container > div.table-scroll > table > tbody > tr")
	for i in range(0, len(rows)):
		row = rows[i]

		tds = row.select("td")
		date        = tds[1].contents[0].strip()
		time        = tds[1].contents[2].strip()
		home_team   = tds[2].a.text.strip()
		away_team   = tds[4].a.text.strip()
		location    = tds[5].contents[0].strip()

		print("{date} {time} {home_team} {away_team} {location}"
			.format(
				date=date,
				time=time,
				home_team=home_team,
				away_team=away_team,
				location=location
				))

		start_date = parse(date + " " + time, dayfirst = True)
		end_date = start_date + timedelta(hours=2)
#		print(" -> {start_date} {end_date} {home_team} {away_team} {location}"
#			.format(
#				start_date=start_date,
#				end_date=end_date,
#				home_team=home_team,
#				away_team=away_team,
#				location=location
#				))

		event = Event()
		event.add('dtstart', start_date)
		event.add('dtend', end_date)
		event.add('dtstamp', datetime.now())
		event.add('location', vText(location))
		event.add('status', 'confirmed')
		event.add('uid', hash(season, home_team, away_team))
		event.add('summary', "{home_team} vs {away_team}".format(
				home_team=home_team,
				away_team=away_team
				))
		event.add('descriptiopn', "A game: {home_team} vs {away_team} at {location}".format(
				home_team=home_team,
				away_team=away_team,
				location=location
				))
		cal.add_component(event)

with open(args.out, 'wb') as ical:
	ical.write(cal.to_ical())

